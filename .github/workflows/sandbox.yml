name: Referrals service commands CI/CD pipeline for sandbox environment.


on:
  push:
    branches: [ "feature/*" ]

  workflow_dispatch:

env:
  DOTNET_VERSION: 6.0.x
  PUBLISH_DIR: ./bin/Release/net6.0/publish
  PUBLISH_FRAMEWORK: net6.0
  ENVIRONMENT_NAME: sandbox
  PROJECT_NAME: ReferralsServiceCommands-MessageLambda
  AWS_S3_BUCKET: referrals-service-commands-sandbox 
  
jobs:

  build-ReferralsServiceCommands-sandbox:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/MessageLambda

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore project dependencies
        run: dotnet restore
      
      - name: Build project
        run: dotnet build --no-restore 
      
      - name: Test project
        run: dotnet test --no-build --verbosity normal

      - name: Publish project
        run: dotnet publish --output ${{env.PUBLISH_DIR}} --configuration Release --framework ${{env.PUBLISH_FRAMEWORK}} /p:GenerateRuntimeConfigurationFiles=true --runtime linux-x64 --self-contained false 

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output 
        run: zip -qq -r ${{env.PUBLISH_DIR}}/${{env.PROJECT_NAME}}-${{env.ENVIRONMENT_NAME}}-${{github.run_number}}.zip ${{env.PUBLISH_DIR}}

      - name: Configure AWS credentials from sandbox account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.SANDBOX_AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.SANDBOX_AWS_SECRET_KEY}}
          aws-session-token: ${{secrets.SANDBOX_AWS_SESSION_TOKEN}}
          aws-region: ap-southeast-2
      
      - name: Copy files to the test website with the AWS CLI
        run: aws s3 cp ${{env.PUBLISH_DIR}}/${{ env.PROJECT_NAME }}-${{env.ENVIRONMENT_NAME}}-${{github.run_number}}.zip s3://${{env.AWS_S3_BUCKET}}

      - name: Just testing workflow
        run: |
          pwd
          echo ls
          ls ${{env.PUBLISH_DIR}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: ${{github.workspace}}/src/MessageLambda/bin/Release/net6.0/publish/${{env.PROJECT_NAME}}-${{env.ENVIRONMENT_NAME}}-${{github.run_number}}.zip
          


      - name: Just testing workflow
        run: |
          pwd
          echo ls
          ls
        
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
