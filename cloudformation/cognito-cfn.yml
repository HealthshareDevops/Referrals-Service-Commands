AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ProjectName:
    Type: String
    Default: ReferralsService
  Environment:
    Type: String
    Default: sandbox
Resources:
  ReferralsServiceUserPool:
    Type: 'AWS::Cognito::UserPool'
    Properties:
      UserPoolName: !Sub '${ProjectName}-${Environment}-UserPool'
      UsernameConfiguration:
        CaseSensitive: false
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
          Mutable: true
    DeletionPolicy: Delete
  ReferralsServiceDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref ReferralsServiceUserPool
      Domain: !Sub 'mhip-referrals-service-userpool-${Environment}'
  ReferralsServiceResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      UserPoolId: !Ref ReferralsServiceUserPool
      Identifier: ReferralsServiceAPI
      Name: RefferalsServiceAPI
      Scopes:
        - ScopeName: api.read
          ScopeDescription: 'Access read operations'
        - ScopeName: api.write
          ScopeDescription: 'Access write operations'
ReferralsServiceUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows: 
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
        - ReferralsServiceAPI/api.read
        - ReferralsServiceAPI/api.write
      ClientName: !Sub '${ProjectName}-${Environment}-UserPoolClient'
      GenerateSecret: true
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId: !Ref ReferralsServiceUserPool
