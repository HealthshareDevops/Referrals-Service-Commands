AWSTemplateFormatVersion: 2010-09-09
Description: "Creates API Gateway and SQS to receive and store referrals payloads/messages."
Parameters: 
  DomainName: 
    Type: String
    Default: PatientReferralService
  ProjectName: 
    Type: String
    Default: ReferralServiceCommand
  Environment: 
    Type: String
    Default: sandbox
  BucketName:
    Type: String
    Default: patient-referral-service-sandbox
  CodeKey:
    Type: String
    Default: ReferralServiceCommand-sandbox-1.zip
  ParamStoreKMSMasterKeyIdARN: 
    Type: AWS::SSM::Parameter::Value<String>
    Default: /PatientReferralService/sandbox/CloudFormation/KMS-Master-KeyIdARN
  ParamStoreLambdaSecurityGroupIds: 
    Type: AWS::SSM::Parameter::Value<CommaDelimitedList>
    Description: "VPC security group ids to attach to lambda"
    Default: /PatientReferralService/sandbox/CloudFormation/Lambda-Security-GroupIds
  ParamStoreLambdaSubnetIds: 
    Type: AWS::SSM::Parameter::Value<CommaDelimitedList>
    Description: "The VPC subnet ids to attach to lambda"
    Default: /PatientReferralService/sandbox/CloudFormation/Lambda-SubnetIds

Resources:
  ReferralsMessageApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: API used for referrals messages
      EndpointConfiguration:
        Types:
          - REGIONAL
      Name: Referrals-Message-RestApi
  
  ReferralsMessageApiRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
        Version: 2012-10-17
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action: sqs:SendMessage
                Effect: Allow
                Resource: !GetAtt ReferralsMessageQueueFifo.Arn
              - Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey
                  - kms:Decrypt
                Effect: Allow
                Resource: !Ref ParamStoreKMSMasterKeyIdARN
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
            Version: 2012-10-17
          PolicyName: Referrals-ApiG-SQS-SendMessage-Policy
      RoleName: Referrals-ApiG-SQS-SendMessage-Role
  
  ReferralsMessageApiCloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: 
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
      RoleName: Referrals-ApiG-CloudWatch-Role

  ReferralsMessageApiAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt ReferralsMessageApiCloudWatchRole.Arn

  ReferralsMessageApiMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Credentials: !GetAtt 'ReferralsMessageApiRole.Arn'
        IntegrationHttpMethod: POST
        IntegrationResponses:
          - StatusCode: '200'
        PassthroughBehavior: NEVER
        RequestParameters:
          integration.request.header.Content-Type: '''application/x-www-form-urlencoded'''
        RequestTemplates:
          application/json: Action=SendMessage&MessageBody=$util.urlEncode($input.body)&MessageGroupId=100
        Type: AWS
        Uri: !Join
          - ''
          - - 'arn:aws:apigateway:'
            - !Ref 'AWS::Region'
            - :sqs:path/
            - !Ref 'AWS::AccountId'
            - /
            - !GetAtt ReferralsMessageQueueFifo.QueueName
      MethodResponses:
        - ResponseModels:
            application/json: Empty
          StatusCode: '200'
      ResourceId: !Ref ReferralsMessageApiResource
      RestApiId: !Ref ReferralsMessageApi
  
  ReferralsMessageApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ReferralsMessageApi.RootResourceId
      PathPart: enqueue
      RestApiId: !Ref ReferralsMessageApi
  
  ReferralsMessageApiDeployment: 
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ReferralsMessageApiMethod
    Properties: 
      RestApiId: !Ref ReferralsMessageApi
      StageName: !Ref Environment
        
  ReferralsMessageQueueFifo:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: Referrals-Message-QueueFifo.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      VisibilityTimeout: 180
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt ReferralsMessageDLQueueFifo.Arn
        maxReceiveCount: 1
      KmsMasterKeyId: !Ref ParamStoreKMSMasterKeyIdARN
  
  ReferralsMessageDLQueueFifo:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: Referrals-Message-DLQueueFifo.fifo
      FifoQueue: true
      ContentBasedDeduplication: true
      KmsMasterKeyId: !Ref ParamStoreKMSMasterKeyIdARN
  
  ReferralsMessageLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: Referrals-Message-Lambda-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - 
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
      Policies:
        - 
          PolicyName: Referrals-Message-Lambda-Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - 
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource: '*'
              - 
                Action:
                  - kms:DescribeKey
                  - kms:GenerateDataKey
                  - kms:Decrypt
                Effect: Allow
                Resource: !Ref ParamStoreKMSMasterKeyIdARN

  ReferralsMessageLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Referrals-Message-Lambda
      Role: !GetAtt ReferralsMessageLambdaRole.Arn
      Code:
        S3Bucket: !Ref BucketName
        S3Key: !Ref CodeKey
      Environment:
        Variables:
          PARAMETERSTORE_PATH: !Join
          - ''
          - - /
            - !Ref ProjectName
            - /
            - !Ref Environment
      Runtime: dotnet6
      Handler: MessageProcessor.Lambda::MessageProcessor.Lambda.Function::FunctionHandler
      MemorySize: 1024
      Timeout: 180
      VpcConfig:
        SecurityGroupIds: !Ref ParamStoreLambdaSecurityGroupIds
        SubnetIds: !Ref ParamStoreLambdaSubnetIds